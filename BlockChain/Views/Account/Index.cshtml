@model BlockChain.Models.RegisterModel

@{
    Layout = null;
}

<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Signup / Login - Biz</title>
    <link href="~/assets/css/login.css" rel="stylesheet" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
          integrity="sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w=="
          crossorigin="anonymous" />
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/toastr@2.1.4/build/toastr.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@9.17.2/dist/sweetalert2.min.css" rel="stylesheet" />

</head>
<body>
    <div class="content">
        <div class="flex-div">
            <div class="name-content">
                <h1 class="logo">Biz</h1>
                <p>Freely share what you want.</p>
                <p>Complete confidentiality no judgement</p>
            </div>
            <div id="loginBlock">
                <form id="signupForm" method="post" action="/account/register">
                    <div class="form-group">
                        <input class="form-control" name="NationalityId" type="text" placeholder="TC number" required />
                    </div>
                    <div class="form-group">
                        <input class="form-control" name="FirstName" type="text" placeholder="Name" required />
                    </div>
                    <div class="form-group">
                        <input class="form-control" name="LastName" type="text" placeholder="Lastname" required />
                    </div>
                    <div class="form-group">
                        <input class="form-control" name="BirthYear" type="number" placeholder="Birth year" required />
                    </div>
                    <div class="form-group">
                        <input class="form-control" name="UserName" type="text" placeholder="Username" required />
                    </div>
                    <button type="submit" class="loginBtn">Sign up</button>
                    <a href="#login" onclick="getHash()">You already have an account? Login</a>
                </form>
                <form id="loginForm" method="post" action="/account/login">
                    <input type="hidden" name="ReturnUrl" value="@Request.QueryString["ReturnUrl"]" />
                    <input name="PrivateKey" type="text" placeholder="Private key" required />
                    <button type="submit" class="loginBtn">Login</button>
                    <a href="#signup" onclick="getHash()">You don't have an account yet? Signup</a>
                </form>
            </div>
        </div>
    </div>
    <script src="~/assets/js/app.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js" integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js" integrity="sha512-37T7leoNS06R80c8Ulq7cdCDU5MNQBwlYoy1TX/WUsLFC2eYNqtKlV0QjH7r8JpG/S0GUMZwebnVFLPd6SU5yg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9.17.2/dist/sweetalert2.all.min.js"></script>

    <style>
        .showKey {
            height: 44px;
            border-radius: 5px;
            display: flex;
            flex-direction: row;
            align-items: center;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        input#privateKey {
            outline: none;
            border: none;
            font: 16px system-ui;
            color: #333;
            height: 100%;
            width: 100%;
            padding: 6px 10px;
        }

        i {
            margin-right: 15px;
            color: #333;
            fill: currentColor;
            width: 20px;
            padding: 8px;
            cursor: pointer;
        }

        .recoveryKey {
            margin-bottom: 30px;
        }

            .recoveryKey span {
                margin-left: 10px;
                padding: 5px;
                border-radius: 5px;
                background-color: #8e44ad;
                color: #fff;
            }

        #labelRecovery {
            margin-top: 30px;
            margin-bottom: 15px;
        }
    </style>
    <script>

        $(function () {
            $.validator.setDefaults({
                submitHandler: function (form) {
                    let formData = new FormData(form);
                    $.ajax({
                        url: '/account/register',
                        type: form.method,
                        processData: false,
                        contentType: false,
                        data: formData,
                        success: function (response) {
                            if (response.status) {
                                swalRegistered(response.data)
                            } else {
                                swalError(response.errorMessage);
                            }
                        },
                        error: function (error) {
                            swalError(error);
                        }
                    })
                }
            });
            $('#signupForm').validate({
                rules: {
                    NationalityId: {
                        required: true
                    },
                    FirstName: {
                        required: true
                    },
                    LastName: {
                        required: true
                    },
                    BirthYear: {
                        required: true
                    },
                    UserName: {
                        required: true
                    }
                },
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    error.addClass('invalid-feedback');
                    element.closest('.form-group').append(error);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                }
            });
        });

        // event handler
        function copyToClipboard(e) {
            // alert('this function was triggered');
            // find target element
            var t = e.target,
                c = t.dataset.copytarget,
                inp = c ? document.querySelector(c) : null;
            console.log(inp);
            // check if input element exist and if it's selectable
            if (inp && inp.select) {
                // select text
                inp.select();
                try {
                    // copy text
                    document.execCommand("copy");
                    inp.blur();

                } catch (err) {
                }
            }
        }

        const swalRegistered = (response) => {
            var privateKey = response.privateKey;
            var recoveryWords = response.recoveryWords;

            var words = recoveryWords.reduce((acc, x) => {
                acc += `<span>${x.Word}</span>`
                return acc;
            }, '<div class="recoveryKey">');

            words += "</div>";

            Swal.fire({
                title: 'You have successfully registered!',
                html: `
<div style="text-align:left;margin-top:40px"><small><b>Private Key<b/></small></div>
<div class="showKey">
              <input
                id="privateKey"
                readonly
                placeholder="Search..."
                value="${privateKey}"
              />
              <i id="copy" class="fa fa-clipboard" aria-hidden="true" data-copytarget="#privateKey"></i>
            </div>
<div id="labelRecovery">Recovery Words</div>
        ${words}
`,
                confirmButtonText: "Go Home",
                allowOutsideClick: false,
                width: 800,
                padding: '3em',
                color: '#716add',
                background: '#fff url(/images/trees.png)',
                backdrop: `
                                rgba(0,0,123,0.4)
                                url("/images/nyan-cat.gif")
                                left top
                                no-repeat
                              `
            }).then(function () {
                window.location = "/";
            });

            $("#copy").on("click", function (event) {
                console.log("Denmeee");
                copyToClipboard(event);
            });
        }

        const swalError = (message) => {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: message,
            })
        }
    </script>

</body>
</html>
